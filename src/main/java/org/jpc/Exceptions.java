package org.jpc;

import java.util.*;

class Exceptions
{
    public static Map<String, String> classes;
    
    static {
        (Exceptions.classes = new HashMap<String, String>()).put("java.lang.RuntimeException", "Other runtime exception");
        Exceptions.classes.put("java.lang.NullPointerException", "Attempted to access null pointer");
        Exceptions.classes.put("java.lang.IndexOutOfBoundsException", "Index out of bounds");
        Exceptions.classes.put("java.util.NoSuchElementException", "No more elements in enumeration");
        Exceptions.classes.put("java.lang.ArrayStoreException", "Attempt to store object of wrong type to array");
        Exceptions.classes.put("java.lang.UnsupportedOperationException", "Operation unsupported");
        Exceptions.classes.put("javax.xml.bind.TypeConstraintException", "Type constraint violation");
        Exceptions.classes.put("java.nio.BufferUnderflowException", "Buffer underrun");
        Exceptions.classes.put("javax.xml.bind.DataBindingException", "JAXB failure");
        Exceptions.classes.put("java.util.concurrent.RejectedExecutionException", "Task can't be executed");
        Exceptions.classes.put("java.awt.HeadlessException", "No graphical display available");
        Exceptions.classes.put("java.lang.reflect.MalformedParameterizedTypeException", "Malformed parametrized type");
        Exceptions.classes.put("javax.lang.model.type.MirroredTypeException", "Attempted to access typemirror object");
        Exceptions.classes.put("java.lang.IllegalStateException", "Object in invalid state for operation");
        Exceptions.classes.put("java.nio.channels.OverlappingFileLockException", "File region already locked");
        Exceptions.classes.put("java.nio.channels.AlreadyConnectedException", "Attempted to connect already connected socket");
        Exceptions.classes.put("java.nio.channels.ClosedSelectorException", "Attempt to use closed selector");
        Exceptions.classes.put("java.nio.channels.NotYetBoundException", "Socket not yet bound");
        Exceptions.classes.put("java.nio.channels.NotYetConnectedException", "Socket not yet connected");
        Exceptions.classes.put("javax.lang.model.element.UnknownElementException", "Unknown element encountered");
        Exceptions.classes.put("java.lang.IllegalArgumentException", "Illegal arguement");
        Exceptions.classes.put("java.util.regex.PatternSyntaxException", "Regex syntax error");
        Exceptions.classes.put("java.nio.charset.UnsupportedCharsetException", "Unsupported character set");
        Exceptions.classes.put("java.lang.SecurityException", "JVM security policy violation");
        Exceptions.classes.put("javax.lang.model.type.MirroredTypesException", "Attempted to access sequece of typemirror objects");
        Exceptions.classes.put("org.w3c.dom.events.EventException", "DOM Event exception");
        Exceptions.classes.put("java.awt.image.ImagingOpException", "ImageOp/RasterOp can't process image");
        Exceptions.classes.put("java.nio.BufferOverflowException", "Buffer overrun");
        Exceptions.classes.put("java.awt.color.ProfileDataException", "ICC_Profile object access error");
        Exceptions.classes.put("java.lang.NumberFormatException", "Invalid number");
        Exceptions.classes.put("javax.management.openmbean.InvalidKeyException", "Item key not valid");
        Exceptions.classes.put("javax.swing.undo.CannotRedoException", "Can not redo edit");
        Exceptions.classes.put("java.awt.color.CMMException", "Native CMM error");
        Exceptions.classes.put("java.security.ProviderException", "Error in security provoder");
        Exceptions.classes.put("javax.print.attribute.UnmodifiableSetException", "Read only set");
        Exceptions.classes.put("java.util.ConcurrentModificationException", "Cocurrent modification not allowed");
        Exceptions.classes.put("javax.xml.crypto.NoSuchMechanismException", "XML mechanizm not available");
        Exceptions.classes.put("java.util.FormatterClosedException", "Formatter already closed");
        Exceptions.classes.put("java.nio.channels.UnresolvedAddressException", "Unresolved network address");
        Exceptions.classes.put("java.awt.image.RasterFormatException", "Raster format layout invalid");
        Exceptions.classes.put("java.lang.reflect.UndeclaredThrowableException", "Undeclared throwable thrown");
        Exceptions.classes.put("javax.swing.undo.CannotUndoException", "Can not undo edit");
        Exceptions.classes.put("java.nio.InvalidMarkException", "No mark defined for buffer");
        Exceptions.classes.put("java.security.InvalidParameterException", "Invalid parameter for operation");
        Exceptions.classes.put("java.nio.charset.IllegalCharsetNameException", "Invalid character set name");
        Exceptions.classes.put("java.nio.channels.NonReadableChannelException", "Channel not open for reading");
        Exceptions.classes.put("javax.lang.model.type.UnknownTypeException", "Unknown element type encountered");
        Exceptions.classes.put("javax.management.openmbean.InvalidOpenTypeException", "Unexpected type of item");
        Exceptions.classes.put("java.lang.EnumConstantNotPresentException", "No such enumerated constant");
        Exceptions.classes.put("java.util.InputMismatchException", "Invalid scanner token");
        Exceptions.classes.put("java.awt.dnd.InvalidDnDOperationException", "DnD in invalid state for operation");
        Exceptions.classes.put("java.lang.TypeNotPresentException", "Type not found");
        Exceptions.classes.put("java.lang.ClassCastException", "Object not castable to type");
        Exceptions.classes.put("java.lang.annotation.IncompleteAnnotationException", "Incomplete annotation");
        Exceptions.classes.put("java.lang.ArithmeticException", "Arithmetic error");
        Exceptions.classes.put("org.w3c.dom.ls.LSException", "Write with DOM processing stopped");
        Exceptions.classes.put("java.nio.channels.CancelledKeyException", "Selection key no longer valid");
        Exceptions.classes.put("java.lang.IllegalMonitorStateException", "Operation requires owning monitor");
        Exceptions.classes.put("java.nio.channels.NoConnectionPendingException", "No connection in progress");
        Exceptions.classes.put("java.nio.channels.NonWritableChannelException", "Channel not open for writing");
        Exceptions.classes.put("java.nio.channels.IllegalSelectorException", "Invalid selector for channel");
        Exceptions.classes.put("java.awt.IllegalComponentStateException", "Component in invalid state for operation");
        Exceptions.classes.put("java.nio.channels.UnsupportedAddressTypeException", "Unsupported address type");
        Exceptions.classes.put("java.util.MissingResourceException", "Resource missing");
        Exceptions.classes.put("org.omg.CORBA.SystemException", "CORBA system exception");
        Exceptions.classes.put("org.w3c.dom.DOMException", "DOM operation is not possible");
        Exceptions.classes.put("java.nio.channels.ConnectionPendingException", "Connect already in progress");
        Exceptions.classes.put("javax.management.JMRuntimeException", "JMX runtime exception");
        Exceptions.classes.put("javax.management.RuntimeOperationsException", "MBean operations runtime error");
        Exceptions.classes.put("javax.management.RuntimeMBeanException", "MBean agent method runtime error");
        Exceptions.classes.put("javax.management.monitor.MonitorSettingException", "Monitor setting has become invalid");
        Exceptions.classes.put("java.lang.NegativeArraySizeException", "Negative array size invalid");
        Exceptions.classes.put("java.lang.StringIndexOutOfBoundsException", "String index out of bounds");
        Exceptions.classes.put("java.security.AccessControlException", "Access denied by JVM policy");
        Exceptions.classes.put("java.lang.IllegalThreadStateException", "Thread not in valid state for operation");
        Exceptions.classes.put("javax.xml.ws.WebServiceException", "Web service error");
        Exceptions.classes.put("javax.xml.ws.ProtocolException", "Web service protocol error");
        Exceptions.classes.put("javax.xml.ws.http.HTTPException", "HTTP fault");
        Exceptions.classes.put("javax.xml.ws.soap.SOAPFaultException", "SOAP fault");
        Exceptions.classes.put("java.awt.geom.IllegalPathStateException", "Invalid path for operation");
        Exceptions.classes.put("java.util.IllegalFormatException", "Invalid format string");
        Exceptions.classes.put("java.util.IllegalFormatConversionException", "Invalid conversion for type");
        Exceptions.classes.put("java.util.UnknownFormatConversionException", "Unknown conversion in format string");
        Exceptions.classes.put("java.util.IllegalFormatFlagsException", "Invalid combination of format flags");
        Exceptions.classes.put("java.util.IllegalFormatCodePointException", "Invalid codepoint in format string");
        Exceptions.classes.put("java.util.FormatFlagsConversionMismatchException", "Invalid flag for conversion");
        Exceptions.classes.put("java.util.DuplicateFormatFlagsException", "Duplicate format flags");
        Exceptions.classes.put("java.util.IllegalFormatWidthException", "Invalid width in format string");
        Exceptions.classes.put("java.util.UnknownFormatFlagsException", "Unknown flag in format string");
        Exceptions.classes.put("java.util.MissingFormatWidthException", "Width required in format string");
        Exceptions.classes.put("java.util.IllegalFormatPrecisionException", "Invalid precision in format string");
        Exceptions.classes.put("java.util.MissingFormatArgumentException", "Format refers to nonexistent arguement");
        Exceptions.classes.put("java.lang.annotation.AnnotationTypeMismatchException", "Annotation type has changed");
        Exceptions.classes.put("java.nio.channels.IllegalBlockingModeException", "Invalid blocking mode for channel");
        Exceptions.classes.put("java.util.EmptyStackException", "Trying to pop empty stack");
        Exceptions.classes.put("java.nio.ReadOnlyBufferException", "Read only buffer");
        Exceptions.classes.put("javax.management.RuntimeErrorException", "JVM error caught");
        Exceptions.classes.put("javax.management.openmbean.KeyAlreadyExistsException", "Item key already exists");
        Exceptions.classes.put("java.util.concurrent.CancellationException", "Task canceled");
        Exceptions.classes.put("java.lang.ArrayIndexOutOfBoundsException", "Array index out of bounds");
        Exceptions.classes.put("java.lang.Error", "JVM Error");
    }
}